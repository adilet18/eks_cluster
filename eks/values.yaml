# Enable Prometheus components
# prometheus:
#   enabled: true
#   service:
#     type: LoadBalancer
#     annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: "elb"
#   persistence:
#     enabled: false

prometheus:
  # Enable Prometheus Server Ingress
  ingress:
    enabled: true
    ingressClassName: "nginx"  # Use the NGINX Ingress controller
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - "prometheus.example.com"  # Change this to your actual domain for Prometheus
    paths:
      - "/"  # The root path
    tls:
      - secretName: prometheus-tls  # Optional: If you have TLS configured
        hosts:
          - "prometheus.example.com"  # The TLS domain

# Grafana settings
# grafana:
#   enabled: true
#   service:
#     type: LoadBalancer
#   adminPassword: "admin123"
#   persistence:
#     enabled: false

grafana:
  # Enable Grafana Ingress
  ingress:
    enabled: true
    ingressClassName: "nginx"  # Use the NGINX Ingress controller
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - "grafana.471112992927.realhandsonlabs.net"  # Change this to your actual domain for Grafana
    paths:
      - "/"  # The root path
    tls:
      - secretName: grafana-tls  # Optional: If you have TLS configured
        hosts:
          - "grafana.471112992927.realhandsonlabs.net"  

# Enable Node Exporter
prometheus-node-exporter:
  enabled: true

# Enable Kube State Metrics
kube-state-metrics:
  enabled: true
